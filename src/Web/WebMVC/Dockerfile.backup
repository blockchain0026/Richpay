#See https://aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.



#FROM mcr.microsoft.com/dotnet/core/sdk:3.1-buster AS build
FROM mcr.microsoft.com/dotnet/core/sdk:3.1 AS build
RUN mkdir /root/.dotnet/tools
RUN dotnet tool install dotnet-counters --global
RUN dotnet tool install dotnet-trace --global
ENV PATH="/root/.dotnet/tools:${PATH}"
WORKDIR /src
COPY ["src/Web/WebMVC/WebMVC.csproj", "src/Web/WebMVC/"]
COPY ["src/Ordering/Ordering.Domain/Ordering.Domain.csproj", "src/Ordering/Ordering.Domain/"]
COPY ["src/Distributing/Distributing.Infrastructure/Distributing.Infrastructure.csproj", "src/Distributing/Distributing.Infrastructure/"]
COPY ["src/Distributing/Distributing.Domain/Distributing.Domain.csproj", "src/Distributing/Distributing.Domain/"]
COPY ["src/Pairing/Pairing.Infrastructure/Pairing.Infrastructure.csproj", "src/Pairing/Pairing.Infrastructure/"]
COPY ["src/Pairing/Pairing.Domain/Pairing.Domain.csproj", "src/Pairing/Pairing.Domain/"]
COPY ["src/Ordering/Ordering.Infrastructure/Ordering.Infrastructure.csproj", "src/Ordering/Ordering.Infrastructure/"]
RUN dotnet restore "src/Web/WebMVC/WebMVC.csproj"
COPY . .
WORKDIR "/src/src/Web/WebMVC"
RUN dotnet build "WebMVC.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "WebMVC.csproj" -c Release -o /app/publish

#FROM mcr.microsoft.com/dotnet/core/aspnet:3.1-buster-slim AS base
FROM mcr.microsoft.com/dotnet/core/aspnet:3.1 AS base
WORKDIR /app
WORKDIR /root/.dotnet/tools
COPY --from=publish /root/.dotnet/tools .
ENV PATH="/root/.dotnet/tools:${PATH}"
EXPOSE 80
EXPOSE 443

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "WebMVC.dll"]